-- LocalScript em StarterPlayer -> StarterPlayerScripts

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")

local LocalPlayer = Players.LocalPlayer
local camera = workspace.CurrentCamera

-- =======================
-- Estado geral
-- =======================
local highlightActive = false
local excludeSelfFromHighlight = false

local aimEnabled = false
local aimHoldActive = false -- segurar botão direito
local aimFOV = 30 -- graus
local aimSmoothing = 0.2 -- 0.0 = instantâneo, 1.0 = muito suave (lento)
local aimTeamCheck = false
local aimRequireVisibility = false
local aimTargetPart = "Head"

-- =======================
-- Destaque (Highlight)
-- =======================
local HIGHLIGHT_NAME = "GlobalRedHighlight"
local characterAddedConnections = {}

local function addHighlightToCharacter(character)
	if not character or not character.Parent then return end
	if character:FindFirstChild(HIGHLIGHT_NAME) then return end

	local highlight = Instance.new("Highlight")
	highlight.Name = HIGHLIGHT_NAME
	highlight.Adornee = character
	highlight.FillColor = Color3.fromRGB(255, 0, 0)
	highlight.OutlineColor = Color3.fromRGB(255, 80, 80)
	highlight.FillTransparency = 0.5
	highlight.OutlineTransparency = 0
	highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
	highlight.Parent = character
end

local function removeHighlightFromCharacter(character)
	if not character then return end
	local h = character:FindFirstChild(HIGHLIGHT_NAME)
	if h then h:Destroy() end
end

local function applyToAllPlayers()
	for _, plr in ipairs(Players:GetPlayers()) do
		if excludeSelfFromHighlight and plr == LocalPlayer then
			-- não destaca a si mesmo
		else
			if plr.Character then
				addHighlightToCharacter(plr.Character)
			end
		end
	end
end

local function removeFromAllPlayers()
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr.Character then
			removeHighlightFromCharacter(plr.Character)
		end
	end
end

local function connectCharacterAdded(plr)
	if characterAddedConnections[plr] then
		characterAddedConnections[plr]:Disconnect()
		characterAddedConnections[plr] = nil
	end

	characterAddedConnections[plr] = plr.CharacterAdded:Connect(function(char)
		if highlightActive then
			if excludeSelfFromHighlight and plr == LocalPlayer then return end
			if not char.Parent then
				char.AncestryChanged:Wait()
			end
			addHighlightToCharacter(char)
		end
	end)
end

local function setupHighlightConnections()
	for _, plr in ipairs(Players:GetPlayers()) do
		connectCharacterAdded(plr)
	end

	Players.PlayerAdded:Connect(function(plr)
		connectCharacterAdded(plr)
		if highlightActive and plr.Character then
			if excludeSelfFromHighlight and plr == LocalPlayer then return end
			addHighlightToCharacter(plr.Character)
		end
	end)

	Players.PlayerRemoving:Connect(function(plr)
		if characterAddedConnections[plr] then
			characterAddedConnections[plr]:Disconnect()
			characterAddedConnections[plr] = nil
		end
	end)
end

local function setHighlightsEnabled(enabled)
	highlightActive = enabled
	if highlightActive then
		applyToAllPlayers()
	else
		removeFromAllPlayers()
	end
end

-- Reaplicar destaque no respawn próprio, se estiver ativo
LocalPlayer.CharacterAdded:Connect(function(char)
	if highlightActive and char then
		if not (excludeSelfFromHighlight and LocalPlayer == LocalPlayer) then
			addHighlightToCharacter(char)
		end
	end
end)

-- =======================
-- Aim Assist (segurar RMB)
-- =======================
local function isTeammate(plr)
	local myTeam = LocalPlayer.Team
	if not myTeam then return false end
	return plr.Team == myTeam
end

local function visibleFromCamera(worldPos, targetChar)
	if not aimRequireVisibility then return true end
	local camPos = camera.CFrame.Position
	local dir = (worldPos - camPos)
	local params = RaycastParams.new()
	params.FilterType = Enum.RaycastFilterType.Exclude
	local ignore = { LocalPlayer.Character }
	if targetChar then table.insert(ignore, targetChar) end
	params.FilterDescendantsInstances = ignore
	local result = Workspace:Raycast(camPos, dir, params)
	return result == nil
end

local function angleBetween(a, b)
	local dot = math.clamp(a:Dot(b), -1, 1)
	return math.deg(math.acos(dot))
end

local function getTarget()
	local camPos = camera.CFrame.Position
	local camLook = camera.CFrame.LookVector
	local best, bestAngle

	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer then
			if not (aimTeamCheck and isTeammate(plr)) then
				local char = plr.Character
				local part = char and char:FindFirstChild(aimTargetPart)
				if part then
					local dir = (part.Position - camPos)
					if dir.Magnitude > 1 then
						local ang = angleBetween(camLook, dir.Unit)
						if ang <= aimFOV then
							if visibleFromCamera(part.Position, char) then
								if not best or ang < bestAngle then
									best, bestAngle = part, ang
								end
							end
						end
					end
				end
			end
		end
	end
	return best
end

local aimConn
local function startAimLoop()
	if aimConn then return end
	aimConn = RunService.RenderStepped:Connect(function(dt)
		if not (aimEnabled and aimHoldActive) then return end
		local targetPart = getTarget()
		if not targetPart then return end

		local camCF = camera.CFrame
		local camPos = camCF.Position
		local desiredDir = (targetPart.Position - camPos).Unit

		local currentDir = camCF.LookVector
		local alpha = math.clamp(aimSmoothing * dt * 60, 0, 1)
		local newDir = currentDir:Lerp(desiredDir, alpha)
		if newDir.Magnitude < 1e-3 then return end
		camera.CFrame = CFrame.new(camPos, camPos + newDir.Unit)
	end)
end

local function stopAimLoop()
	if aimConn then aimConn:Disconnect() aimConn = nil end
end

-- Lida com o botão direito (não cria hotkeys extras)
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		aimHoldActive = true
	end
end)
UserInputService.InputEnded:Connect(function(input, _processed)
	if input.UserInputType == Enum.UserInputType.MouseButton2 then
		aimHoldActive = false
	end
end)

-- =======================
-- UI
-- =======================
local function createUI()
	local gui = Instance.new("ScreenGui")
	gui.Name = "ControlPanel"
	gui.ResetOnSpawn = false
	gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
	gui.Parent = LocalPlayer:WaitForChild("PlayerGui")

	-- Main frame
	local frame = Instance.new("Frame")
	frame.Name = "Main"
	frame.Size = UDim2.fromOffset(340, 260)
	frame.Position = UDim2.fromOffset(20, 200)
	frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
	frame.BorderSizePixel = 0
	frame.Parent = gui

	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 8)
	local stroke = Instance.new("UIStroke", frame)
	stroke.Color = Color3.fromRGB(60, 60, 60)

	-- Header
	local header = Instance.new("Frame")
	header.Name = "Header"
	header.Size = UDim2.new(1, 0, 0, 36)
	header.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	header.BorderSizePixel = 0
	header.Parent = frame
	Instance.new("UICorner", header).CornerRadius = UDim.new(0, 8)

	local title = Instance.new("TextLabel")
	title.BackgroundTransparency = 1
	title.Text = "Painel: Destaque + Aim"
	title.Font = Enum.Font.GothamBold
	title.TextSize = 16
	title.TextColor3 = Color3.fromRGB(230, 230, 230)
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.Size = UDim2.new(1, -36, 1, 0)
	title.Position = UDim2.fromOffset(12, 0)
	title.Parent = header

	-- Drag header
	local dragging = false
	local dragStart, startPos
	header.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = frame.Position
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)
	header.InputChanged:Connect(function(input)
		if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
			local delta = input.Position - dragStart
			frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		end
	end)

	local content = Instance.new("Frame")
	content.Name = "Content"
	content.BackgroundTransparency = 1
	content.Size = UDim2.new(1, -16, 1, -48)
	content.Position = UDim2.fromOffset(8, 40)
	content.Parent = frame

	local list = Instance.new("UIListLayout")
	list.Padding = UDim.new(0, 8)
	list.FillDirection = Enum.FillDirection.Vertical
	list.HorizontalAlignment = Enum.HorizontalAlignment.Left
	list.SortOrder = Enum.SortOrder.LayoutOrder
	list.Parent = content

	local function makeRow(height)
		local row = Instance.new("Frame")
		row.Size = UDim2.new(1, 0, 0, height or 32)
		row.BackgroundTransparency = 1
		row.Parent = content
		local layout = Instance.new("UIListLayout")
		layout.FillDirection = Enum.FillDirection.Horizontal
		layout.HorizontalAlignment = Enum.HorizontalAlignment.Left
		layout.Padding = UDim.new(0, 6)
		layout.Parent = row
		return row
	end

	local function makeButton(text)
		local btn = Instance.new("TextButton")
		btn.Size = UDim2.new(1, 0, 0, 32)
		btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		btn.TextColor3 = Color3.fromRGB(230, 230, 230)
		btn.Font = Enum.Font.Gotham
		btn.TextSize = 14
		btn.Text = text
		btn.AutoButtonColor = false
		btn.Parent = content
		Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
		local st = Instance.new("UIStroke", btn)
		st.Color = Color3.fromRGB(70, 70, 70)
		btn.MouseEnter:Connect(function() TweenService:Create(btn, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(55,55,55)}):Play() end)
		btn.MouseLeave:Connect(function() TweenService:Create(btn, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(40,40,40)}):Play() end)
		return btn
	end

	local function makeSmallButton(parent, text, width)
		local btn = Instance.new("TextButton")
		btn.Size = UDim2.fromOffset(width, 32)
		btn.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		btn.TextColor3 = Color3.fromRGB(230, 230, 230)
		btn.Font = Enum.Font.Gotham
		btn.TextSize = 14
		btn.Text = text
		btn.AutoButtonColor = false
		btn.Parent = parent
		Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
		local st = Instance.new("UIStroke", btn)
		st.Color = Color3.fromRGB(70, 70, 70)
		btn.MouseEnter:Connect(function() TweenService:Create(btn, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(55,55,55)}):Play() end)
		btn.MouseLeave:Connect(function() TweenService:Create(btn, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(40,40,40)}):Play() end)
		return btn
	end

	local function makeToggle(label, initial)
		local row = makeRow(32)
		local tag = Instance.new("TextLabel")
		tag.Size = UDim2.new(1, -100, 1, 0)
		tag.BackgroundTransparency = 1
		tag.Text = label
		tag.Font = Enum.Font.Gotham
		tag.TextSize = 14
		tag.TextColor3 = Color3.fromRGB(220,220,220)
		tag.TextXAlignment = Enum.TextXAlignment.Left
		tag.Parent = row

		local btn = makeSmallButton(row, initial and "ON" or "OFF", 90)
		local function setUI(on)
			btn.Text = on and "ON" or "OFF"
			btn.TextColor3 = on and Color3.fromRGB(0,200,120) or Color3.fromRGB(230,230,230)
		end
		setUI(initial)
		return row, btn, setUI
	end

	local function makeNumberRow(label, getValue, setValue, minV, maxV, step, widthMid)
		local row = makeRow(32)
		local lbl = Instance.new("TextLabel")
		lbl.Text = label
		lbl.Font = Enum.Font.Gotham
		lbl.TextSize = 14
		lbl.TextColor3 = Color3.fromRGB(220,220,220)
		lbl.BackgroundTransparency = 1
		lbl.Size = UDim2.new(1, -(widthMid or 170), 1, 0)
		lbl.TextXAlignment = Enum.TextXAlignment.Left
		lbl.Parent = row

		local minus = makeSmallButton(row, "−", 36)
		local box = Instance.new("TextBox")
		box.Size = UDim2.fromOffset(92, 32)
		box.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		box.TextColor3 = Color3.fromRGB(230, 230, 230)
		box.Font = Enum.Font.Gotham
		box.TextSize = 14
		box.ClearTextOnFocus = false
		box.Text = tostring(getValue())
		box.Parent = row
		Instance.new("UICorner", box).CornerRadius = UDim.new(0, 6)
		local stBox = Instance.new("UIStroke", box)
		stBox.Color = Color3.fromRGB(70, 70, 70)

		local plus = makeSmallButton(row, "+", 36)

		local function clampV(v) return math.clamp(v, minV, maxV) end
		local function refresh() box.Text = tostring(getValue()) end

		minus.MouseButton1Click:Connect(function()
			local v = clampV(getValue() - step)
			setValue(v); refresh()
		end)
		plus.MouseButton1Click:Connect(function()
			local v = clampV(getValue() + step)
			setValue(v); refresh()
		end)
		box.FocusLost:Connect(function()
			local v = tonumber(box.Text)
			if v then setValue(clampV(v)) end
			refresh()
		end)

		return row, refresh
	end

	-- Secção: Destaque
	local btnHighlight = makeButton("Destaque vermelho: OFF")
	btnHighlight.LayoutOrder = 1

	local _, toggleSelfBtn, setSelfUI = makeToggle("Excluir a si mesmo do destaque", excludeSelfFromHighlight)
	toggleSelfBtn.LayoutOrder = 2

	-- Secção: Aim Assist
	local _, aimToggleBtn, setAimUI = makeToggle("Aim Assist (segurar Botão Direito)", aimEnabled)
	aimToggleBtn.LayoutOrder = 3

	local rowFOV, refreshFOV = makeNumberRow("Aim FOV (graus)", function() return aimFOV end, function(v) aimFOV = math.floor(v) end, 5, 120, 5)
	rowFOV.LayoutOrder = 4

	local rowSmooth, refreshSmooth = makeNumberRow("Aim Suavização (0.0–1.0)", function() return aimSmoothing end, function(v) aimSmoothing = tonumber(string.format("%.2f", v)) end, 0.0, 1.0, 0.05, 220)
	rowSmooth.LayoutOrder = 5

	local _, teamBtn, setTeamUI = makeToggle("Aim ignora companheiros (Team Check)", aimTeamCheck)
	teamBtn.LayoutOrder = 6

	local _, visBtn, setVisUI = makeToggle("Aim requer visibilidade (Raycast)", aimRequireVisibility)
	visBtn.LayoutOrder = 7

	-- Atualizadores de UI
	local function refreshButtons()
		btnHighlight.Text = highlightActive and "Destaque vermelho: ON" or "Destaque vermelho: OFF"
		btnHighlight.TextColor3 = highlightActive and Color3.fromRGB(255, 110, 110) or Color3.fromRGB(230,230,230)
		setSelfUI(excludeSelfFromHighlight)

		setAimUI(aimEnabled)
		setTeamUI(aimTeamCheck)
		setVisUI(aimRequireVisibility)
		refreshFOV(); refreshSmooth()
	end

	-- Ligações de UI (sem hotkeys)
	btnHighlight.MouseButton1Click:Connect(function()
		setHighlightsEnabled(not highlightActive)
		refreshButtons()
	end)

	toggleSelfBtn.MouseButton1Click:Connect(function()
		excludeSelfFromHighlight = not excludeSelfFromHighlight
		if highlightActive then
			removeFromAllPlayers()
			applyToAllPlayers()
		end
		refreshButtons()
	end)

	aimToggleBtn.MouseButton1Click:Connect(function()
		aimEnabled = not aimEnabled
		if aimEnabled then startAimLoop() else stopAimLoop() end
		refreshButtons()
	end)

	teamBtn.MouseButton1Click:Connect(function()
		aimTeamCheck = not aimTeamCheck
		refreshButtons()
	end)

	visBtn.MouseButton1Click:Connect(function()
		aimRequireVisibility = not aimRequireVisibility
		refreshButtons()
	end)

	refreshButtons()
end

-- =======================
-- Inicialização
-- =======================
setupHighlightConnections()
createUI()
startAimLoop() -- inicia o loop; só atua quando aimEnabled e RMB pressionado
